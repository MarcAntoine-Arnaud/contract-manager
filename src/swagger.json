{
  "swagger": "2.0",
  "info": {
    "title": "Contract Manager API",
    "description": "Availables routes through the Contract Manager API",
    "version": "1.0.0"
  },
  "host": "8888",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/bilaterals/all/": {
      "get": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/for/{did}": {
      "get": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "did",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "isParticipant",
            "in": "query",
            "type": "string"
          },
          {
            "name": "hasSigned",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/": {
      "post": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/{id}": {
      "get": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/negociator/{id}": {
      "put": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "did": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/sign/{id}": {
      "put": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/sign/revoke/{id}/{did}": {
      "delete": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "did",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/check-exploitability/{id}": {
      "post": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bilaterals/policy/{id}": {
      "post": {
        "tags": [
          "Bilateral"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "policyId": {
                  "example": "any"
                },
                "values": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/all/": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get all contracts with optional filter status",
        "description": "",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/for/{did}": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get contracts for a specific DID with an optional filter",
        "description": "",
        "parameters": [
          {
            "name": "did",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hasSigned",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/": {
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/{id}": {
      "get": {
        "tags": [
          "Contract"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Contract"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/odrl/{id}": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "get ODRL contract",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/sign/{id}": {
      "put": {
        "tags": [
          "Contract"
        ],
        "summary": "Sign contract",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/sign/revoke/{id}/{did}": {
      "delete": {
        "tags": [
          "Contract"
        ],
        "summary": "Revoque signature",
        "description": "Revoke a signature on a contract for a given contract id and party did",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "did",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/check-exploitability/{id}": {
      "post": {
        "tags": [
          "Contract"
        ],
        "summary": "Check data exploitation",
        "description": "Check if data is authorized for exploitation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/policy/{id}": {
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/policies/{id}": {
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/contracts/policies/role/{id}": {
      "post": {
        "tags": [
          "Contract"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/pap/policies/": {
      "post": {
        "tags": [
          "Pap"
        ],
        "summary": "Endpoint to create a new policy.",
        "description": "Endpoint to create a new policy.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "Policy object to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Policy created successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "400": {
            "description": "Bad request. Error creating the policy.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Pap"
        ],
        "summary": "Endpoint to get a list of policies.",
        "description": "Endpoint to get a list of policies.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of policies retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyList"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/pap/policies/{name}": {
      "get": {
        "tags": [
          "Pap"
        ],
        "summary": "Endpoint to get policies by name.",
        "description": "Endpoint to get policies by name.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the policy."
          }
        ],
        "responses": {
          "200": {
            "description": "Policy retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "404": {
            "description": "No policies found with the given name.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/pap/policies/{id}": {
      "get": {
        "tags": [
          "Pap"
        ],
        "summary": "Endpoint to get a policy by ID.",
        "description": "Endpoint to get a policy by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the policy."
          }
        ],
        "responses": {
          "200": {
            "description": "Policy retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "404": {
            "description": "Policy not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "Pap"
        ],
        "summary": "Endpoint to update a policy by ID.",
        "description": "Endpoint to update a policy by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the policy."
          },
          {
            "name": "policy",
            "in": "body",
            "description": "Updated policy object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Policy updated successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "400": {
            "description": "Bad request. Error updating the policy.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Policy not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Pap"
        ],
        "summary": "Endpoint to delete a policy by ID.",
        "description": "Endpoint to delete a policy by ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the policy."
          }
        ],
        "responses": {
          "200": {
            "description": "Policy deleted successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "404": {
            "description": "Policy not found.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/pap/policies/verify": {
      "post": {
        "tags": [
          "Pap"
        ],
        "summary": "Endpoint to verify an ODRL policy.",
        "description": "Endpoint to verify an ODRL policy.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policy",
            "in": "body",
            "description": "ODRL policy to be verified.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ODRLPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Policy verification result.",
            "schema": {
              "$ref": "#/definitions/VerificationResult"
            }
          },
          "400": {
            "description": "Bad request. The ODRL policy is not valid.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/policies": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "policies": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/store": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Policy": {
      "type": "object",
      "properties": {}
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "string"
            }
          }
        }
      }
    },
    "ODRLPolicy": {
      "type": "object",
      "properties": {}
    },
    "PolicyList": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {}
      }
    },
    "VerificationResult": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "boolean"
        }
      }
    }
  }
}